@inject IJSRuntime JSRuntime

<RadzenButton @ref=button Text="@(websiteAddress != null ? "Selected: " + websiteAddress.ToString() : "Select a Site")" Click="@(args => popup.ToggleAsync(button.Element))" />

<Popup @ref=popup Lazy=true Open="@OnOpen"
    Style="display:none;position:absolute;height:300px;width:600px;padding:5px;border:var(--rz-panel-border);background-color:var(--rz-panel-background-color);">
    <RadzenTextBox id="search" Placeholder="Type to search..." Style="width:100%;" @oninput=@(args => searchString = $"{args.Value}") Value="@searchString" />
    <RadzenDataList @ref=websiteList AllowVirtualization=true Data="@websites" TItem="RegisteredWebsite" Style="height:100%;overflow:auto;">
        <Template Context="website">
            <RadzenCard Style="width:100%">
                <RadzenRow>
                    <RadzenColumn Size="8" class="rz-text-truncate">
                        <RadzenBadge BadgeStyle="BadgeStyle.Light" Text=@($"{website.Id}") class="me-1" />
                        <b>@(website.Domain)</b>
                    </RadzenColumn>
                    <RadzenColumn Size="4" class="rz-text-align-end">
                        <RadzenBadge BadgeStyle="BadgeStyle.Success" Text=@($"{String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", website.Domain)}") />
                    </RadzenColumn>
                </RadzenRow>
                <hr style="border: none; background-color: var(--rz-text-disabled-color); height: 1px; margin: 1rem 0;" />
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                    <RadzenStack Gap="0">
                        <RadzenText TextStyle="TextStyle.H6" Class="rz-mb-0">@(website.Domain + " " + website.Domain)</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1">@website.Domain</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body2">@(website.Domain), @(website.Domain)</RadzenText>
                    </RadzenStack>
                    <RadzenButton Text="Select" Click="@(args => SelectOrder(website))" Visible=@(websiteAddress != website.Domain) />
                </RadzenStack>
            </RadzenCard>
        </Template>
    </RadzenDataList>
</Popup>

@code {
    RadzenButton button;
    Radzen.Blazor.Rendering.Popup popup;
    RadzenDataList<RegisteredWebsite> websiteList;
    IEnumerable<RegisteredWebsite> websites;
    string websiteAddress;
    string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        websites = new List<RegisteredWebsite>()
        {
            new RegisteredWebsite{ Id = 0, Domain = "www.example.com"},
            new RegisteredWebsite{ Id = 1, Domain = "www.example.com"},
            new RegisteredWebsite{ Id = 2, Domain = "www.example.com"},
            new RegisteredWebsite{ Id = 3, Domain = "www.example.com"}
        };
    }

    async Task SelectOrder(RegisteredWebsite website)
    {
        websiteAddress = website.Domain; 
        await popup.CloseAsync();
    }

    async Task OnOpen()
    {
        await JSRuntime.InvokeVoidAsync("eval", "setTimeout(function(){ document.getElementById('search').focus(); }, 200)"); 
    }
}